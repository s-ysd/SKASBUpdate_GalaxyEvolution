%!PS-Adobe-2.0 EPSF-2.0
%%Title: drm-l.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Feb  3 14:31:47 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 865 M
63 0 V
6101 0 R
-63 0 V
stroke
714 865 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (-2000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 1756 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1756 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (-1000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 2646 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2646 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 3536 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3536 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 4427 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4427 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MRshow
grestore
1.000 UL
LTb
5421 420 M
0 63 V
0 4389 R
0 -63 V
stroke
5421 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (270)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3880 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3880 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
grestore
1.000 UL
LTb
2339 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2339 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (90)]
] -46.7 MCshow
grestore
1.000 UL
LTb
798 420 M
0 63 V
0 4389 R
0 -63 V
stroke
798 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (180)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
LTb
140 2646 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 140.0 0.0 true true 0 (D)]
[(Helvetica) 140.0 0.0 true true 0 ( RM)]
] -46.7 MCshow
grestore
grestore
LTb
3880 70 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (Galactic longitude)]
] -46.7 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
gsave 0 setgray
("Over4withHanT10.dat" u 2:6) Rshow
grestore
LT0
5192 2626 Crs
5157 2593 Crs
5188 2474 Crs
5154 2441 Crs
5188 2080 Crs
5190 2235 Crs
5154 2047 Crs
5119 2756 Crs
5094 2368 Crs
5090 2708 Crs
5080 2646 Crs
5075 3177 Crs
5067 2827 Crs
5124 2847 Crs
5116 2278 Crs
5093 2743 Crs
5086 1974 Crs
5085 3287 Crs
5099 2459 Crs
5085 2737 Crs
5080 3086 Crs
5091 1890 Crs
5087 2230 Crs
5078 2168 Crs
5073 3655 Crs
5064 2349 Crs
5068 2355 Crs
5061 1586 Crs
5060 2899 Crs
5057 2357 Crs
5043 2894 Crs
5040 2668 Crs
5064 2695 Crs
5056 1926 Crs
5056 3239 Crs
5053 2697 Crs
5038 3235 Crs
5036 3008 Crs
5074 2488 Crs
5066 3032 Crs
5055 2633 Crs
5050 3415 Crs
5050 3190 Crs
5047 2644 Crs
5041 2813 Crs
5044 2898 Crs
5033 3523 Crs
5015 3519 Crs
5047 1863 Crs
5047 3177 Crs
5044 2634 Crs
5041 2381 Crs
5029 3172 Crs
5027 2946 Crs
5042 3959 Crs
5033 2044 Crs
5036 2129 Crs
5039 3188 Crs
5033 3357 Crs
5036 3442 Crs
5024 2650 Crs
5022 2877 Crs
5003 2953 Crs
5030 2815 Crs
5033 2900 Crs
5021 3184 Crs
5015 3353 Crs
5013 3127 Crs
5018 3438 Crs
5016 3211 Crs
4993 3402 Crs
5004 2872 Crs
4985 2949 Crs
4982 2722 Crs
4971 2806 Crs
4937 2265 Crs
4934 2494 Crs
4922 2824 Crs
4919 3053 Crs
4903 2370 Crs
4891 2577 Crs
4883 2423 Crs
4901 2599 Crs
4889 2806 Crs
4880 2652 Crs
4864 1925 Crs
4852 2132 Crs
4852 2858 Crs
4839 2057 Crs
4846 1790 Crs
4842 1964 Crs
4843 1978 Crs
4843 2705 Crs
4830 1903 Crs
4825 2426 Crs
4822 976 Crs
4806 1532 Crs
4833 2820 Crs
4834 2834 Crs
4834 3560 Crs
4822 2759 Crs
4817 3282 Crs
4814 1831 Crs
4827 2137 Crs
4818 2585 Crs
4808 2530 Crs
4809 2180 Crs
4829 2151 Crs
4816 2314 Crs
4809 2544 Crs
4810 2195 Crs
4802 2392 Crs
4796 2245 Crs
4828 2878 Crs
4815 3040 Crs
4809 3271 Crs
4809 2921 Crs
4802 3119 Crs
4795 2972 Crs
4816 2076 Crs
4811 2599 Crs
4808 1148 Crs
4803 2447 Crs
4801 2123 Crs
4793 2713 Crs
4803 2239 Crs
4796 2470 Crs
4797 2120 Crs
4789 2317 Crs
4779 2810 Crs
4776 2252 Crs
4772 2685 Crs
4773 2536 Crs
4767 2719 Crs
4761 2168 Crs
4763 2829 Crs
4795 1519 Crs
4793 2669 Crs
4794 2319 Crs
4773 2450 Crs
4798 2762 Crs
4791 2992 Crs
4792 2642 Crs
4784 2840 Crs
4771 2774 Crs
4767 3208 Crs
4768 3058 Crs
4756 2691 Crs
4758 3351 Crs
4784 1786 Crs
4795 1311 Crs
4788 1542 Crs
4789 1192 Crs
4781 1390 Crs
4771 1882 Crs
4768 1324 Crs
4764 1757 Crs
4765 1608 Crs
4752 1240 Crs
4755 1901 Crs
4768 2342 Crs
4782 2279 Crs
4779 1868 Crs
4775 2510 Crs
4772 2098 Crs
4742 2482 Crs
4776 2160 Crs
4773 1748 Crs
4743 2132 Crs
4768 2358 Crs
4765 1946 Crs
4751 2344 Crs
4733 2735 Crs
4735 2330 Crs
4758 2850 Crs
4761 2235 Crs
4755 2292 Crs
4751 2725 Crs
4752 2576 Crs
4746 2759 Crs
4739 2208 Crs
4742 2869 Crs
4727 2101 Crs
4723 1938 Crs
4755 2439 Crs
4749 2088 Crs
4745 2521 Crs
4746 2372 Crs
4725 2822 Crs
4752 1880 Crs
4748 2314 Crs
4749 2164 Crs
4744 2248 Crs
4743 2348 Crs
4736 1797 Crs
4739 2457 Crs
4724 1690 Crs
4720 1527 Crs
4717 1935 Crs
4738 2278 Crs
4737 2179 Crs
4721 2585 Crs
4720 2669 Crs
4722 2264 Crs
4716 3103 Crs
4718 2698 Crs
4735 2562 Crs
4734 2463 Crs
4718 2869 Crs
4717 2953 Crs
4719 2548 Crs
4729 2746 Crs
4723 2195 Crs
4725 2855 Crs
4714 2632 Crs
4706 1925 Crs
4724 2756 Crs
4711 3137 Crs
4713 2731 Crs
4706 2501 Crs
4704 2585 Crs
4706 2180 Crs
4708 3162 Crs
4707 3246 Crs
4709 2841 Crs
4692 2479 Crs
4694 2073 Crs
4695 2731 Crs
4697 2325 Crs
4689 2231 Crs
4686 2639 Crs
4696 2241 Crs
4688 2316 Crs
4685 2723 Crs
4673 3171 Crs
4646 2573 Crs
4690 1911 Crs
4687 2318 Crs
4675 2766 Crs
4667 2833 Crs
4654 2201 Crs
4679 2238 Crs
4659 1724 Crs
4656 2131 Crs
4617 1981 Crs
4624 2014 Crs
4598 1830 Crs
4604 2613 Crs
4586 2926 Crs
4575 3058 Crs
4559 2186 Crs
4566 2219 Crs
4567 2776 Crs
4549 2868 Crs
4556 2908 Crs
4536 1773 Crs
4553 2686 Crs
4533 1995 Crs
4540 2035 Crs
4512 2197 Crs
4508 2596 Crs
4496 2455 Crs
4491 2203 Crs
4493 2195 Crs
4484 2203 Crs
4472 960 Crs
4468 1358 Crs
4467 2393 Crs
4457 1218 Crs
4451 965 Crs
4453 957 Crs
4433 1382 Crs
4433 1126 Crs
4411 926 Crs
4444 965 Crs
4409 1060 Crs
4421 1196 Crs
4382 2688 Crs
4369 2766 Crs
4366 2179 Crs
4380 2822 Crs
4368 1909 Crs
4366 2222 Crs
4369 2181 Crs
4355 1261 Crs
4356 1987 Crs
4353 2300 Crs
4356 2259 Crs
4342 1339 Crs
4352 2959 Crs
4366 2043 Crs
4364 2356 Crs
4317 2595 Crs
4331 1924 Crs
4367 2315 Crs
4353 1395 Crs
4246 2508 Crs
4248 2663 Crs
4305 1626 Crs
4306 1635 Crs
4320 963 Crs
4294 1313 Crs
4232 2518 Crs
4252 2776 Crs
4248 2489 Crs
4233 2673 Crs
4229 2672 Crs
4307 2264 Crs
4261 2268 Crs
4230 2638 Crs
4224 2674 Crs
4220 2673 Crs
4256 1982 Crs
4225 2351 Crs
4242 2165 Crs
4213 2476 Crs
4201 2394 Crs
4211 2535 Crs
4177 3347 Crs
4249 2829 Crs
4218 3199 Crs
4201 1915 Crs
4208 2475 Crs
4201 2705 Crs
4168 3517 Crs
4216 3257 Crs
4199 1974 Crs
4166 2786 Crs
4206 2534 Crs
4172 3346 Crs
4179 2487 Crs
4190 2787 Crs
4156 3599 Crs
4188 2627 Crs
4155 3439 Crs
4111 4001 Crs
4052 3015 Crs
4170 2792 Crs
4182 2681 Crs
4162 2500 Crs
4137 3604 Crs
4148 3493 Crs
4128 3312 Crs
4108 3239 Crs
4117 4346 Crs
4093 3604 Crs
4112 3656 Crs
4089 3550 Crs
4084 3735 Crs
4113 1612 Crs
4049 2253 Crs
4093 1539 Crs
4088 2229 Crs
4034 2618 Crs
4030 2564 Crs
4019 2334 Crs
4025 2749 Crs
4097 1956 Crs
4029 3061 Crs
3933 2276 Crs
3800 2780 Crs
3798 2650 Crs
3798 2098 Crs
3811 2707 Crs
3792 2516 Crs
3778 1732 Crs
3776 1602 Crs
3790 3199 Crs
3776 1050 Crs
3789 1659 Crs
3741 1534 Crs
3741 1389 Crs
3719 2501 Crs
3687 2574 Crs
3662 3072 Crs
3623 3602 Crs
3642 2529 Crs
3606 2636 Crs
3593 2401 Crs
3596 4486 Crs
3582 3314 Crs
3642 3946 Crs
3603 4477 Crs
3577 3472 Crs
3622 3404 Crs
3564 3756 Crs
3568 3079 Crs
3589 4242 Crs
3564 3237 Crs
3547 3785 Crs
3608 3169 Crs
3662 2853 Crs
3642 2311 Crs
3541 3151 Crs
3541 2127 Crs
3546 2473 Crs
3541 2632 Crs
3524 3179 Crs
3546 2804 Crs
3535 2482 Crs
3519 3030 Crs
3399 2609 Crs
3405 2262 Crs
3399 2717 Crs
3406 2370 Crs
3407 2881 Crs
3129 2612 Crs
3237 3123 Crs
3223 2535 Crs
3101 3036 Crs
3113 2549 Crs
3077 3267 Crs
2953 2772 Crs
2946 2755 Crs
2580 2983 Crs
2566 2757 Crs
2586 3043 Crs
2572 2817 Crs
2578 2420 Crs
2584 2655 Crs
2570 2429 Crs
2050 2779 Crs
2036 2954 Crs
1942 2752 Crs
6594 4739 Crs
1.000 UP
1.000 UL
LT1
LTb
6311 4599 M
gsave 0 setgray
("D4and8withHanT10.dat" u 2:6) Rshow
grestore
LT1
5192 2626 Box
5157 2593 Box
5190 2235 Box
5124 2847 Box
5099 2459 Box
5085 2737 Box
5057 2357 Box
5053 2697 Box
5044 2634 Box
5041 2381 Box
5030 2815 Box
5033 2900 Box
4971 2806 Box
4846 1790 Box
4793 2669 Box
4794 2319 Box
4773 2450 Box
4749 2088 Box
4745 2521 Box
4746 2372 Box
4737 2179 Box
4721 2585 Box
4734 2463 Box
4718 2869 Box
4724 2756 Box
4706 2501 Box
4708 3162 Box
4689 2231 Box
4686 2639 Box
4679 2238 Box
4604 2613 Box
4575 3058 Box
4549 2868 Box
4556 2908 Box
4553 2686 Box
4467 2393 Box
4382 2688 Box
4369 2766 Box
4380 2822 Box
4368 1909 Box
4369 2181 Box
4356 1987 Box
4356 2259 Box
4366 2043 Box
4367 2315 Box
4246 2508 Box
4248 2663 Box
4232 2518 Box
4252 2776 Box
4248 2489 Box
4233 2673 Box
4229 2672 Box
4307 2264 Box
4261 2268 Box
4224 2674 Box
4220 2673 Box
4256 1982 Box
4242 2165 Box
4213 2476 Box
4201 2394 Box
4249 2829 Box
4201 1915 Box
4208 2475 Box
4179 2487 Box
4113 1612 Box
4093 1539 Box
4088 2229 Box
4097 1956 Box
4029 3061 Box
3933 2276 Box
3792 2516 Box
3790 3199 Box
3719 2501 Box
3596 4486 Box
3662 2853 Box
3642 2311 Box
3541 3151 Box
3541 2127 Box
3546 2473 Box
3541 2632 Box
3524 3179 Box
3546 2804 Box
3535 2482 Box
3519 3030 Box
3399 2609 Box
3405 2262 Box
3399 2717 Box
3406 2370 Box
3407 2881 Box
3129 2612 Box
3237 3123 Box
3223 2535 Box
3101 3036 Box
3113 2549 Box
3077 3267 Box
2953 2772 Box
2946 2755 Box
6594 4599 Box
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
